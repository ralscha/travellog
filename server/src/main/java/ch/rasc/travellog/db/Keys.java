/*
 * This file is generated by jOOQ.
 */
package ch.rasc.travellog.db;


import ch.rasc.travellog.db.tables.AppSession;
import ch.rasc.travellog.db.tables.AppUser;
import ch.rasc.travellog.db.tables.Log;
import ch.rasc.travellog.db.tables.LogPhoto;
import ch.rasc.travellog.db.tables.Travel;
import ch.rasc.travellog.db.tables.records.AppSessionRecord;
import ch.rasc.travellog.db.tables.records.AppUserRecord;
import ch.rasc.travellog.db.tables.records.LogPhotoRecord;
import ch.rasc.travellog.db.tables.records.LogRecord;
import ch.rasc.travellog.db.tables.records.TravelRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AppSessionRecord> KEY_APP_SESSION_PRIMARY = Internal.createUniqueKey(AppSession.APP_SESSION, DSL.name("KEY_app_session_PRIMARY"), new TableField[] { AppSession.APP_SESSION.ID }, true);
    public static final UniqueKey<AppUserRecord> KEY_APP_USER_EMAIL = Internal.createUniqueKey(AppUser.APP_USER, DSL.name("KEY_app_user_email"), new TableField[] { AppUser.APP_USER.EMAIL }, true);
    public static final UniqueKey<AppUserRecord> KEY_APP_USER_PRIMARY = Internal.createUniqueKey(AppUser.APP_USER, DSL.name("KEY_app_user_PRIMARY"), new TableField[] { AppUser.APP_USER.ID }, true);
    public static final UniqueKey<LogRecord> KEY_LOG_PRIMARY = Internal.createUniqueKey(Log.LOG, DSL.name("KEY_log_PRIMARY"), new TableField[] { Log.LOG.ID }, true);
    public static final UniqueKey<LogPhotoRecord> KEY_LOG_PHOTO_PRIMARY = Internal.createUniqueKey(LogPhoto.LOG_PHOTO, DSL.name("KEY_log_photo_PRIMARY"), new TableField[] { LogPhoto.LOG_PHOTO.ID }, true);
    public static final UniqueKey<TravelRecord> KEY_TRAVEL_PRIMARY = Internal.createUniqueKey(Travel.TRAVEL, DSL.name("KEY_travel_PRIMARY"), new TableField[] { Travel.TRAVEL.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AppSessionRecord, AppUserRecord> APP_SESSION_IBFK_1 = Internal.createForeignKey(AppSession.APP_SESSION, DSL.name("app_session_ibfk_1"), new TableField[] { AppSession.APP_SESSION.APP_USER_ID }, Keys.KEY_APP_USER_PRIMARY, new TableField[] { AppUser.APP_USER.ID }, true);
    public static final ForeignKey<LogRecord, TravelRecord> LOG_IBFK_1 = Internal.createForeignKey(Log.LOG, DSL.name("log_ibfk_1"), new TableField[] { Log.LOG.TRAVEL_ID }, Keys.KEY_TRAVEL_PRIMARY, new TableField[] { Travel.TRAVEL.ID }, true);
    public static final ForeignKey<LogPhotoRecord, LogRecord> LOG_PHOTO_IBFK_1 = Internal.createForeignKey(LogPhoto.LOG_PHOTO, DSL.name("log_photo_ibfk_1"), new TableField[] { LogPhoto.LOG_PHOTO.LOG_ID }, Keys.KEY_LOG_PRIMARY, new TableField[] { Log.LOG.ID }, true);
    public static final ForeignKey<TravelRecord, AppUserRecord> TRAVEL_IBFK_1 = Internal.createForeignKey(Travel.TRAVEL, DSL.name("travel_ibfk_1"), new TableField[] { Travel.TRAVEL.APP_USER_ID }, Keys.KEY_APP_USER_PRIMARY, new TableField[] { AppUser.APP_USER.ID }, true);
}
